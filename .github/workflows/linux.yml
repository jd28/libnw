name: linux
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"

jobs:
  build:
    env:
      buildDir: "${{ github.workspace }}/build/"
      vcpkg-tag: "2022.03.10"
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg/"
      VCPKG_DEFAULT_BINARY_CACHE: "${{ github.workspace }}/vcpkg/.cache"
      ASAN_OPTIONS: "detect_leaks=0" # Not read for this yet..

    name: build on linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      - name: Install breathe
        run: python -m pip install breathe sphinx_rtd_theme

      - name: Install gcc-11
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install gcc-11 g++-11 lcov doxygen
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11

      - uses: actions/checkout@v2
        with:
          submodules: true

      # Install latest CMake.
      - uses: lukka/get-cmake@latest

      - name: download vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg ${{ github.workspace }}/vcpkg || true
          pushd vcpkg
          git checkout --force ${{ env.vcpkg-tag }}
          ./bootstrap-vcpkg.sh
          popd

      - name: cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        env:
          cache-name: cache-vcpgk2
        with:
          path: |
            ${{ github.workspace }}/vcpkg/.cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.vcpkg-tag }}-${{ hashFiles('vcpkg.json') }}

      - name: Make cache dir
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: mkdir -p "${{ github.workspace }}/vcpkg/.cache"

      - name: Configure
        run: |
          cmake --preset ci-linux

      - name: Build
        run: |
          cmake --build --preset default

      - name: Test
        run: |
          ctest --preset default

      - name: Coverage
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' '/Library/*' $(pwd)'/tests/*' $(pwd)'/build/vcpkg_installed/*' $(pwd)'/external/*' --output-file coverage.info
          lcov --list coverage.info
          bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

      - name: deploy docs to github pages
        if: github.event_name == 'push'
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: "${{ github.workspace }}/build/docs/sphinx"
          clean: true
