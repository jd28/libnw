name: macOS
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.json"

  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.json"

jobs:
  build:
    env:
      buildDir: "${{ github.workspace }}/build/"

    name: build on macOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Install latest CMake.
      - uses: lukka/get-cmake@latest

      - name: install non-vcpkg dependencies
        env:
          HOMEBREW_NO_ANALYTICS: "ON"
          HOMEBREW_NO_AUTO_UPDATE: "ON"
          HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
          HOMEBREW_NO_INSTALL_CLEANUP: "ON"
        run: |
          brew install pkg-config automake

      - name: set ENV variables for clang 13
        run: |
          echo "CC=$(brew --prefix llvm)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm)/bin/clang++" >> $GITHUB_ENV

      - name: check clang version
        run: $CC --version

      - name: cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        env:
          cache-name: cache-vcpgk
        with:
          path: |
            ${{ github.workspace }}/vcpkg
            ${{ github.workspace }}/build/vcpkg_installed
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.vcpkg-tag }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.vcpkg-tag }}
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: download vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/microsoft/vcpkg ${{ github.workspace }}/vcpkg || true
          pushd vcpkg
          git checkout --force ${{ env.vcpkg-tag }}
          ./bootstrap-vcpkg.sh
          popd

      - name: Configure
        run: |
          cmake --preset default-test

      - name: Build
        run: |
          cmake --build --preset default

      - name: Test
        run: |
          ctest --preset default
